<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function ucm_install() {
  $themes = array(
    'default' => variable_get('theme_default', 'bartik'),
    'admin' => 'seven',
  );
  
  $filter_perms = _ucm_setup_filter_formats();
  _ucm_setup_blocks($themes);

  _ucm_setup_user_pictures();
  
  _ucm_setup_roles($filter_perms);
  
  _ucm_setup_quickbar();
  
  _ucm_setup_admin_theme($themes['admin']);
  
}

function _ucm_setup_filter_formats() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);
  
  // Enable default permissions for system roles.
  $filter_perms = array(
    'filtered_html' => filter_permission_name($filtered_html_format),
    'full_html' => filter_permission_name($full_html_format),
  );

  return $filter_perms;
}

function _ucm_setup_blocks($themes) {
  // Enable some standard blocks.
  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $themes['default'],
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'node',
      'delta' => 'recent',
      'theme' => $themes['admin'],
      'status' => 1,
      'weight' => 10,
      'region' => 'dashboard_main',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $themes['default'],
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $themes['default'],
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $themes['admin'],
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $themes['admin'],
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $themes['admin'],
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $themes['admin'],
      'status' => 1,
      'weight' => 0,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();
}

function _ucm_setup_user_pictures() {
  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');
}

function _ucm_setup_roles($filter_perms) {
  // Set permissions for anonymous and authenticated roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', $filter_perms['filtered_html']));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', $filter_perms['filtered_html']));
  
  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 4;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
    
  // Create a content editor role
  $content_editor = new stdClass();
  $content_editor->name = 'content editor';
  $content_editor->weight = 2;
  user_role_save($content_editor);
  
  $content_editor_permissions = array(
    $filter_perms['filtered_html'],
    'view revisions',
    'view own unpublished content',
    'access overlay',
    'create url aliases',
    'view the administration theme',
  );
  user_role_grant_permissions($content_editor->rid, $content_editor_permissions);
  
  // Create a site manager role
  $site_manager = new stdClass();
  $site_manager->name = 'site manager';
  $site_manager->weight = 3;
  user_role_save($site_manager);
  
  $site_manager_permissions = array(
    $filter_perms['filtered_html'],
    'administer blocks',
    'access contextual links',
    'administer menu',
    'view own unpublished content',
    'access overlay',
    'view revisions',
    'revert revisions',
    'delete revisions',
    'create url aliases',
    'assign content editor role',
    'assign site manager role',
    'administer site configuration',
    'administer themes',
    'view the administration theme',
    'access site reports',
    'administer users',
  );
  user_role_grant_permissions($site_manager->rid, $site_manager_permissions);
}

function _ucm_setup_quickbar() {
  // Enable faux machine names for roles.
  variable_set('quickbar_use_machine_names', 1);
  
  $toolbar_settings = array(
    'iconset' => 'quickbar',
    'sticky' => 0,
    'float' => 0,
    'secondary_menu_visibility' => 0,
    'nofollow' => 0,
  );
  
  // Build administrator toolbar menu
  $administrator_menu_definition = array(
    'menu_name' => 'menu-toolbar-administrator',
    'title' => 'Toolbar - Administrator',
    'description' => 'This is the administration toolbar for adminstrators.',
  );
  
  menu_save($administrator_menu_definition);
  
  // Add administrator menu settings for quickbar.
  $menus['administrator'] = 'menu-toolbar-administrator';
  $weights['administrator'] = -10;
  
  variable_set('quickbar_settings_administrator', $toolbar_settings);
  
  // Build site manager toolbar menu
  $site_manager_menu_definition = array(
    'menu_name' => 'menu-toolbar-site-manager',
    'title' => 'Toolbar - Site Manager',
    'description' => 'This is the administration toolbar for site managers.',
  );
  
  menu_save($site_manager_menu_definition);
  
  // Add site manager settings for quickbar.
  $menus['site-manager'] = 'menu-toolbar-site-manager';
  $weights['site-manager'] = -9;
  
  variable_set('quickbar_settings_site-manager', $toolbar_settings);
  
  // Build content editor toolbar menu
  $content_editor_menu_definition = array(
    'menu_name' => 'menu-toolbar-content-editor',
    'title' => 'Toolbar - Content Editor',
    'description' => 'This is the administration toolbar for content editors.',
  );
  
  menu_save($content_editor_menu_definition);
  
  // Add content editor settings for quickbar
  $menus['content-editor'] = 'menu-toolbar-content-editor';
  $weights['content-editor'] = -8;
  
  variable_set('quickbar_settings_content-editor', $toolbar_settings);
  
  // Add the role menu settings
  variable_set('quickbar_role_menus', $menus);
  
  // Add the role weight settings
  $weights['authenticated-user'] = 0;
  $weights['anonymous-user'] = 1;
  variable_set('quickbar_role_weights', $weights);
  
}

function _ucm_setup_admin_theme($theme) {
  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $theme)
    ->execute();
  variable_set('admin_theme', $theme);
  variable_set('node_admin_theme', '1');
}